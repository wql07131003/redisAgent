#conf
[Plugin]
    Dir: ./lib
    @Lib: libredis.so
    @Lib: libgalileo.so
[Galileo]
    ZkHost: 10.46.135.28:2181
    ZkPath: /baidu/ns/ksarch/redisproxy/lizhe_test
    PortConf: Server/Port
    Log: ./log/galileo.log
    LogLevelConf: Log/Level
[Redis]
    MaxResponseSize: 65535
[Server]
    #库数量
    Db_Num : 1
    Port: 7001
    Whitelist: conf/authip
    WhitelistCheckInterval: 10
    # for log
    Pid : lizhe-test
    # for omp log
    Product : ksarch-redis
    Subsys : lizhe-test
    Module : redisproxy
[Log]
    Dir: ./log
    Name: proxy
    Level: 8

#库配置
[@Db]
    #库名
    #[(char[32])]
    Db_Name : test
    #产品线ID
    #[(uint)]
    Db_Pid : 1

    #分片配置
    [.DbShard]
        #分片方式
        #[(uint) 0-hash分段]
        Db_Shard_Mode : 0

        #分片数[系统按16bit（65536）取模]
        #[(uint)]
        Db_Shard_PartitionNum : 1
        #各分片上的key配置
        #[(char[PARTITION_INFO_SIZE], PARTITION_INFO_SIZE=5120), 必须是0-65535的全集]
        Db_Shard_Partition0 : 0-65535

    #连接配置
    [.DbConnect]
        #长短连接 
        #[LONG / SHORT]
        Db_Connect_Type : LONG
        #连接数
        #[(uint)]
        Db_Connect_Num : 50
        #超时
        #[(uint)ms]
        Db_Connect_ProcessTimeoutMs : 1000
        #获取连接重试次数
        #[(uint)]
        Db_Connect_GetConnectRetryNum : 1

        Db_Connect_ReadRoomOnly : 0
        Db_Connect_ReadIdcOnly : 0

    [.@Service]
        #服务名
        #[(char[32])]
        Service_Name : server1
        #IP
        #[(char[128])]
        Service_Addr : 127.0.0.1
        #PORT
        #[(unsigned)]
        Service_Port : 9901
        #所属分片
        #[(uint)]
        Service_Partition : 0
        #可读
        #[(int)]
        Service_CanRead : 1
        #可写
        #[(int)]
        Service_CanWrite : 1

    [.@User]
        #用户名
        #[(char[32])]
        User_Name : lizhe
        #用户token
        #[(char[32])]
        User_Tk : test
        #权限
        #[(int)1-读写用户 2-只读用户]
        User_Power : 1

[Admin]
    #管理员用户
    Admin_Uname : admin
    Admin_Tk : iamadmin

[SuperStrategy]
    #机房信息
    Machine_Room : tc
    #直接使用配置套餐 可选套餐: RANDOM_PACK / CONSISTENCY_PACK / ROUNDROBIN_PACK
    Package : RANDOM_PACK
    #【若不使用套餐，可参考以下详细配置】
    # 超级负载均衡均衡策略 Random / Consistency / RoundRobin
    # Random 随机选择一个可用的后端
    # Consistency 一致性hash 根据传入的第四个参数(bk),加server ip\port进行计算后hash
    # RoundRobin 轮询各个后端
    Balance : Random
    # 连接健康状态，如果配置不完整表示关闭连接健康状态
    # 默认值100，表示记录过去100次的连接状态，不可reload
    ConnectQueueSize : 100
    # 控制连接失败率计算，一般可以不调整
    ConnectX1 : 10
    ConnectY1 : 95
    ConnectX2 : 40
    ConnectY2 : 5
    # 默认值100，表示记录过去100s的读取信息，不可reload
    HealthyQueueSize : 100
    # client端读的超时时间，单位ms
    HealthyTimeout   : 100
    # 计算选择概率的时间间隔，以s为单位
    HealthyCheckTime : 3 
    # 选择概率的最小值，0.1表示最小概率为10%
    HealthyMinRate   : 0.1
    # 速度大于这个倍数才能做流量切分，用于不对称节点的负载平衡
    HealthyBackupThreshold  : 3
    #首次负载均衡是否仅本机房
    CrossRoom : OFF

